[gd_scene load_steps=23 format=2]

[ext_resource path="res://OriginalModels/ObjectsBlaspheme/grass/grass.gltf" type="PackedScene" id=1]
[ext_resource path="res://Textures/windgrass2.png" type="Texture" id=2]
[ext_resource path="res://Assets/grass/grass.gd" type="Script" id=3]

[sub_resource type="VisualShaderNodeInput" id=19]
output_port_for_preview = 0
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id=4]

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, 15.0 ]
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id=6]
operator = 2

[sub_resource type="VisualShaderNodeColorFunc" id=7]

[sub_resource type="VisualShaderNodeColorConstant" id=20]
constant = Color( 0.124723, 0.363281, 0.0752106, 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=21]
constant = Color( 0.398438, 0.172483, 0.112079, 1 )

[sub_resource type="VisualShaderNodeVectorInterp" id=22]

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=9]

[sub_resource type="VisualShaderNodeVec3Constant" id=10]
constant = Vector3( 0.45, 0, 0.6 )

[sub_resource type="VisualShaderNodeVectorOp" id=11]

[sub_resource type="VisualShaderNodeVectorOp" id=12]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id=14]

[sub_resource type="VisualShaderNodeTexture" id=15]
texture = ExtResource( 2 )

[sub_resource type="VisualShader" id=16]
code = "shader_type spatial;
render_mode cull_disabled;

uniform sampler2D tex_vtx_9;



void vertex() {
// Vector:4
	vec3 n_out4p0 = vec3(0.450000, 0.000000, 0.600000);

// Input:2
	vec3 n_out2p0 = VERTEX;

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// VectorCompose:8
	float n_in8p2 = 0.00000;
	vec3 n_out8p0 = vec3(n_out3p0, n_out3p2, n_in8p2);

// Input:7
	float n_out7p0 = TIME;

// VectorOp:12
	vec3 n_out12p0 = n_out8p0 + vec3(n_out7p0);

// ScalarOp:13
	float n_in13p1 = 15.00000;
	float n_out13p0 = dot(n_out12p0, vec3(0.333333, 0.333333, 0.333333)) / n_in13p1;

// Texture:9
	vec4 tex_vtx_9_read = texture(tex_vtx_9, vec3(n_out13p0).xy);
	vec3 n_out9p0 = tex_vtx_9_read.rgb;
	float n_out9p1 = tex_vtx_9_read.a;

// ColorFunc:15
	vec3 n_out15p0;
	{
		vec3 c = n_out9p0;
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		float max3 = max(max1, max2);
		n_out15p0 = vec3(max3, max3, max3);
	}

// VectorOp:14
	vec3 n_out14p0 = n_out4p0 * n_out15p0;

// VectorOp:6
	vec3 n_out6p0 = n_out14p0 * vec3(n_out3p1);

// VectorOp:5
	vec3 n_out5p0 = n_out6p0 + n_out2p0;

// Color:17
	vec3 n_out17p0 = vec3(0.398438, 0.172483, 0.112079);
	float n_out17p1 = 1.000000;

// Color:16
	vec3 n_out16p0 = vec3(0.124723, 0.363281, 0.075211);
	float n_out16p1 = 1.000000;

// VectorMix:18
	vec3 n_out18p0 = mix(n_out17p0, n_out16p0, vec3(n_out3p1));

// Output:0
	VERTEX = n_out5p0;
	COLOR.rgb = n_out18p0;

}

void fragment() {
// Input:2
	vec3 n_out2p0 = COLOR.rgb;

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -289.012, -192 )
modes/cull = 2
nodes/vertex/0/position = Vector2( 540, 140 )
nodes/vertex/2/node = SubResource( 8 )
nodes/vertex/2/position = Vector2( -540, 40 )
nodes/vertex/3/node = SubResource( 9 )
nodes/vertex/3/position = Vector2( -380, 200 )
nodes/vertex/4/node = SubResource( 10 )
nodes/vertex/4/position = Vector2( 100, 480 )
nodes/vertex/5/node = SubResource( 11 )
nodes/vertex/5/position = Vector2( 180, 200 )
nodes/vertex/6/node = SubResource( 12 )
nodes/vertex/6/position = Vector2( 40, 40 )
nodes/vertex/7/node = SubResource( 13 )
nodes/vertex/7/position = Vector2( -880, 340 )
nodes/vertex/8/node = SubResource( 14 )
nodes/vertex/8/position = Vector2( -760, 160 )
nodes/vertex/9/node = SubResource( 15 )
nodes/vertex/9/position = Vector2( -240, 320 )
nodes/vertex/12/node = SubResource( 4 )
nodes/vertex/12/position = Vector2( -620, 320 )
nodes/vertex/13/node = SubResource( 5 )
nodes/vertex/13/position = Vector2( -500, 420 )
nodes/vertex/14/node = SubResource( 6 )
nodes/vertex/14/position = Vector2( 60, 320 )
nodes/vertex/15/node = SubResource( 7 )
nodes/vertex/15/position = Vector2( -100, 580 )
nodes/vertex/16/node = SubResource( 20 )
nodes/vertex/16/position = Vector2( 240, -60 )
nodes/vertex/17/node = SubResource( 21 )
nodes/vertex/17/position = Vector2( 260, -160 )
nodes/vertex/18/node = SubResource( 22 )
nodes/vertex/18/position = Vector2( 380, -40 )
nodes/vertex/connections = PoolIntArray( 3, 1, 6, 1, 3, 0, 8, 0, 3, 2, 8, 1, 8, 0, 12, 0, 7, 0, 12, 1, 12, 0, 13, 0, 13, 0, 9, 0, 4, 0, 14, 0, 14, 0, 6, 0, 5, 0, 0, 0, 2, 0, 3, 0, 2, 0, 5, 1, 6, 0, 5, 0, 9, 0, 15, 0, 15, 0, 14, 1, 18, 0, 0, 6, 3, 1, 18, 2, 17, 0, 18, 0, 16, 0, 18, 1 )
nodes/fragment/2/node = SubResource( 19 )
nodes/fragment/2/position = Vector2( 20, 240 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=17]
shader = SubResource( 16 )

[sub_resource type="BoxShape" id=18]
extents = Vector3( 12.3727, 0.993688, 13.5042 )

[node name="grass" instance=ExtResource( 1 )]
script = ExtResource( 3 )

[node name="grass" parent="." index="0"]
material_override = SubResource( 17 )

[node name="Area" type="Area" parent="." index="1"]

[node name="CollisionShape" type="CollisionShape" parent="Area" index="0"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 13.0093, 0.477728, -12.7104 )
shape = SubResource( 18 )
[connection signal="body_entered" from="Area" to="." method="_on_Area_body_entered"]
[connection signal="body_exited" from="Area" to="." method="_on_Area_body_exited"]
