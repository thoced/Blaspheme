[gd_scene load_steps=19 format=2]

[ext_resource path="res://OriginalModels/ObjectsBlaspheme/grass/grass.gltf" type="PackedScene" id=1]
[ext_resource path="res://Textures/windgrass.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 0.083847, 0.613281, 0.154163, 1 )

[sub_resource type="VisualShaderNodeVectorCompose" id=2]

[sub_resource type="VisualShaderNodeVectorOp" id=4]

[sub_resource type="VisualShaderNodeVectorOp" id=5]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=7]
default_input_values = [ 0, Vector3( 0.2, 0.2, 0.2 ), 1, Vector3( 0, 0, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorFunc" id=17]

[sub_resource type="VisualShaderNodeVec3Constant" id=9]
constant = Vector3( 0.4, 0, 0.4 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=10]

[sub_resource type="VisualShaderNodeVectorOp" id=11]

[sub_resource type="VisualShaderNodeVectorOp" id=12]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = ExtResource( 2 )
texture_type = 1

[sub_resource type="VisualShaderNodeColorFunc" id=14]

[sub_resource type="VisualShader" id=15]
code = "shader_type spatial;
render_mode cull_disabled;

uniform sampler2D tex_vtx_7 : hint_albedo;



void vertex() {
// Input:2
	vec3 n_out2p0 = VERTEX;

// VectorDecompose:4
	float n_out4p0 = n_out2p0.x;
	float n_out4p1 = n_out2p0.y;
	float n_out4p2 = n_out2p0.z;

// Vector:3
	vec3 n_out3p0 = vec3(0.400000, 0.000000, 0.400000);

// VectorCompose:10
	float n_in10p2 = 0.00000;
	vec3 n_out10p0 = vec3(n_out4p0, n_out4p2, n_in10p2);

// VectorFunc:20
	vec3 n_out20p0 = normalize(n_out10p0);

// Input:18
	float n_out18p0 = TIME;

// VectorOp:19
	vec3 n_in19p0 = vec3(0.20000, 0.20000, 0.20000);
	vec3 n_out19p0 = n_in19p0 * vec3(n_out18p0);

// VectorOp:14
	vec3 n_out14p0 = n_out20p0 + n_out19p0;

// Texture:7
	vec4 tex_vtx_7_read = texture(tex_vtx_7, n_out14p0.xy);
	vec3 n_out7p0 = tex_vtx_7_read.rgb;
	float n_out7p1 = tex_vtx_7_read.a;

// ColorFunc:9
	vec3 n_out9p0;
	{
		vec3 c = n_out7p0;
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		float max3 = max(max1, max2);
		n_out9p0 = vec3(max3, max3, max3);
	}

// VectorOp:17
	vec3 n_out17p0 = n_out3p0 * n_out9p0;

// VectorOp:6
	vec3 n_out6p0 = vec3(n_out4p1) * n_out17p0;

// VectorOp:5
	vec3 n_out5p0 = n_out2p0 + n_out6p0;

// Output:0
	VERTEX = n_out5p0;

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(0.083847, 0.613281, 0.154163);
	float n_out2p1 = 1.000000;

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -147, 304 )
modes/cull = 2
nodes/vertex/0/position = Vector2( 1160, 100 )
nodes/vertex/2/node = SubResource( 8 )
nodes/vertex/2/position = Vector2( 280, 20 )
nodes/vertex/3/node = SubResource( 9 )
nodes/vertex/3/position = Vector2( 1040, 220 )
nodes/vertex/4/node = SubResource( 10 )
nodes/vertex/4/position = Vector2( 460, 20 )
nodes/vertex/5/node = SubResource( 11 )
nodes/vertex/5/position = Vector2( 900, 120 )
nodes/vertex/6/node = SubResource( 12 )
nodes/vertex/6/position = Vector2( 580, 200 )
nodes/vertex/7/node = SubResource( 13 )
nodes/vertex/7/position = Vector2( 460, 320 )
nodes/vertex/9/node = SubResource( 14 )
nodes/vertex/9/position = Vector2( 720, 380 )
nodes/vertex/10/node = SubResource( 2 )
nodes/vertex/10/position = Vector2( -160, 380 )
nodes/vertex/14/node = SubResource( 4 )
nodes/vertex/14/position = Vector2( 260, 480 )
nodes/vertex/17/node = SubResource( 5 )
nodes/vertex/17/position = Vector2( 940, 360 )
nodes/vertex/18/node = SubResource( 6 )
nodes/vertex/18/position = Vector2( -340, 560 )
nodes/vertex/19/node = SubResource( 7 )
nodes/vertex/19/position = Vector2( -120, 520 )
nodes/vertex/20/node = SubResource( 17 )
nodes/vertex/20/position = Vector2( 120, 400 )
nodes/vertex/connections = PoolIntArray( 2, 0, 5, 0, 5, 0, 0, 0, 4, 1, 6, 0, 2, 0, 4, 0, 7, 0, 9, 0, 4, 0, 10, 0, 6, 0, 5, 1, 3, 0, 17, 0, 17, 0, 6, 1, 19, 0, 14, 1, 18, 0, 19, 1, 9, 0, 17, 1, 14, 0, 7, 0, 10, 0, 20, 0, 20, 0, 14, 0, 4, 2, 10, 1 )
nodes/fragment/0/position = Vector2( 840, 60 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 333, 104 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=18]
shader = SubResource( 15 )

[node name="grass" instance=ExtResource( 1 )]

[node name="grass" parent="." index="0"]
material_override = SubResource( 18 )

[node name="OmniLight" type="OmniLight" parent="." index="1"]
transform = Transform( 1, 0, 0, 0, 0.994861, -0.101247, 0, 0.101247, 0.994861, 0.853827, 4.21559, -0.0813851 )
light_color = Color( 0.792157, 0.87451, 0.203922, 1 )
shadow_enabled = true
omni_range = 29.2
