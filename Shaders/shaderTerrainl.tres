[gd_resource type="ShaderMaterial" load_steps=16 format=2]

[ext_resource path="res://Textures/albedoBase.png" type="Texture" id=1]
[ext_resource path="res://Textures/weightBas.png" type="Texture" id=2]
[ext_resource path="res://Textures/Detail.jpg" type="Texture" id=3]
[ext_resource path="res://Textures/detailSand.jpg" type="Texture" id=4]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 3 )
texture_type = 1

[sub_resource type="VisualShaderNodeVectorScalarMix" id=2]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=3]

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = ExtResource( 1 )
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = ExtResource( 2 )
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = ExtResource( 4 )
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "uv2"

[sub_resource type="VisualShaderNodeVectorDecompose" id=9]

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "uv2"

[sub_resource type="VisualShader" id=11]
code = "shader_type spatial;
uniform sampler2D tex_frg_2 : hint_albedo;
uniform sampler2D tex_frg_10 : hint_albedo;
uniform sampler2D tex_frg_3 : hint_albedo;
uniform sampler2D tex_frg_5 : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out4p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Input:9
	vec3 n_out9p0 = vec3(UV2, 0.0);

// Texture:10
	vec4 tex_frg_10_read = texture(tex_frg_10, n_out9p0.xy);
	vec3 n_out10p0 = tex_frg_10_read.rgb;
	float n_out10p1 = tex_frg_10_read.a;

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out4p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// VectorDecompose:7
	float n_out7p0 = n_out3p0.x;
	float n_out7p1 = n_out3p0.y;
	float n_out7p2 = n_out3p0.z;

// VectorScalarMix:12
	vec3 n_out12p0 = mix(n_out2p0, n_out10p0, n_out7p2);

// Input:6
	vec3 n_out6p0 = vec3(UV2, 0.0);

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, n_out6p0.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// VectorScalarMix:13
	vec3 n_out13p0 = mix(n_out12p0, n_out5p0, n_out7p0);

// Output:0
	ALBEDO = n_out13p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 688.817, -26.08 )
nodes/fragment/0/position = Vector2( 1760, 20 )
nodes/fragment/2/node = SubResource( 4 )
nodes/fragment/2/position = Vector2( 700, 20 )
nodes/fragment/3/node = SubResource( 5 )
nodes/fragment/3/position = Vector2( 700, 280 )
nodes/fragment/4/node = SubResource( 6 )
nodes/fragment/4/position = Vector2( 460, 60 )
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( 960, 480 )
nodes/fragment/6/node = SubResource( 8 )
nodes/fragment/6/position = Vector2( 700, 580 )
nodes/fragment/7/node = SubResource( 9 )
nodes/fragment/7/position = Vector2( 980, 260 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( 780, -200 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 940, -200 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( 1180, 80 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( 1460, 200 )
nodes/fragment/connections = PoolIntArray( 4, 0, 2, 0, 4, 0, 3, 0, 6, 0, 5, 0, 3, 0, 7, 0, 9, 0, 10, 0, 2, 0, 12, 0, 10, 0, 12, 1, 7, 2, 12, 2, 12, 0, 13, 0, 5, 0, 13, 1, 7, 0, 13, 2, 13, 0, 0, 0 )

[resource]
shader = SubResource( 11 )
